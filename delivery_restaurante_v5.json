{
  "name": "Delivery_restaurante_V5",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1580,
        -320
      ],
      "id": "020f140c-a655-46c9-992a-398860defa1b",
      "name": "When chat message received",
      "webhookId": "4e1a9c0d-f99f-4978-8bd0-aa75fe137f88"
    },
    {
      "parameters": {
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1020,
        -100
      ],
      "id": "f7ccb81c-a281-4742-871b-4f830fc1fda1",
      "name": "Simple Memory4"
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=\nVoc√™ √© um atendente virtual da pizzaria De‚ÄôVitto Pasta & Pizza, que realiza pedidos via WhatsApp. Atue de forma simp√°tica, consultiva e eficiente.\n\nüîí **INSTRU√á√ïES IMPORTANTES ‚Äì N√ÉO INVENTE!**\n- Voc√™ DEVE responder **exclusivamente com base no card√°pio oficial fornecido**.\n- **N√ÉO** invente, assuma ou crie itens, combina√ß√µes, receitas ou pre√ßos.\n- Caso o cliente pergunte algo que **n√£o est√° no card√°pio**, diga educadamente: \n  > \"Desculpe, n√£o temos esse item no card√°pio. Posso sugerir algo que temos dispon√≠vel?\"\n- Siga apenas os itens presentes neste conte√∫do: {{$node[\"üì¶ Card√°pio JSON3\"]}}\nüß† **Fun√ß√µes obrigat√≥rias:**\n1. Sempre cumprimente o cliente com uma mensagem institucional:\n   \"Ol√°! Seja bem-vindo √† De‚ÄôVitto Pasta & Pizza üçï ‚Äì sob NOVA dire√ß√£o! Confira nossas especialidades!\"\n2. Antes de qualquer resposta, use o node Think1 para processar a mensagem.\n3. Siga estritamente os itens do menu oficial:\n   -  {{$node[\"üì¶ Card√°pio JSON3\"]}}\n4. Sugira combina√ß√µes dentro do card√°pio, como pizza + bebida + sobremesa.\n5. Nunca mencione pratos ou ingredientes n√£o listados.\n6. Estimule o cliente a adicionar itens ao carrinho.\n7. Se o cliente j√° fez pedidos anteriormente, consulte os dados da base Supabase.  \n  Sugira produtos que ele j√° pediu antes com frases como:\n  ‚ÄúQuer repetir o pedido da √∫ltima vez?‚Äù  \n  ‚ÄúSua favorita foi a Marguerita, certo?‚Äù\n\nUse isso como forma de criar conex√£o e acelerar a decis√£o.\n\n‚úÖ Ao final de cada sugest√£o, pergunte:\n> \"Posso adicionar ao seu carrinho?\"\n\nüöö Ap√≥s escolha dos itens, pergunte:\n> \"Voc√™ gostaria de entrega em casa ou vai retirar no restaurante?\"\n\nüìç Caso escolha entrega, pe√ßa:\n> \"Por favor, envie seu endere√ßo completo com n√∫mero, bairro e ponto de refer√™ncia.\"\n\nüßæ CARD√ÅPIO REFER√äNCIA:  {{$node[\"üì¶ Card√°pio JSON3\"]}}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -988,
        -320
      ],
      "id": "fd034c85-d940-404a-afe4-0150c9588e66",
      "name": "Node Atendimento Delivery"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -900,
        -100
      ],
      "id": "cc23a470-2ce5-49c4-ab84-233130f137d4",
      "name": "Calculator"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "base_de_dados",
        "toolDescription": "Chame essa tool para saber sobre o cardapio"
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.1,
      "position": [
        -780,
        -97.5
      ],
      "id": "984cf66c-5d52-4d6e-ac14-2ae9d004d2c0",
      "name": "Simple Vector Store2",
      "notesInFlow": false
    },
    {
      "parameters": {
        "modelName": "models/text-embedding-004"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        -692,
        100
      ],
      "id": "170cde7c-a10f-4972-9ca5-4c0b8008b910",
      "name": "Embeddings Google Gemini2",
      "credentials": {
        "googlePalmApi": {
          "id": "j3J863U0JqisVt3i",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "description": "=Voc√™ √© um assistente virtual que responde apenas com base nos documentos fornecidos. N√ÉO deve inventar respostas nem assumir conhecimento externo.  \nSe a pergunta n√£o puder ser respondida com base nas informa√ß√µes recuperadas, diga de forma educada que n√£o encontrou essa informa√ß√£o.  \nSeja fiel aos detalhes, pre√ßos, nomes e descri√ß√µes exatas dos produtos contidos no documento json.\nN√£o mencione itens, pre√ßos ou informa√ß√µes que n√£o estejam no conte√∫do recebido."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -860,
        100
      ],
      "id": "e0f5bdb0-611f-47fa-8f3e-fd8e4a376616",
      "name": "Think"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"pizzas_tradicionais\": [\n    { \"nome\": \"Frango com Catupiry\", \"preco\": 89 },\n    { \"nome\": \"Portuguesa\", \"preco\": 95 },\n    { \"nome\": \"Marguerita\", \"preco\": 95 },\n    { \"nome\": \"Mussarela\", \"preco\": 95 },\n    { \"nome\": \"Calabresa Paulista\", \"preco\": 89 },\n    { \"nome\": \"Toscana\", \"preco\": 89 },\n    { \"nome\": \"Bacon Especial\", \"preco\": 89 },\n    { \"nome\": \"R√∫cula com Tomate Seco\", \"preco\": 89 },\n    { \"nome\": \"Linguicinha com Pimenta de Cheiro\", \"preco\": 89 },\n    { \"nome\": \"Frango com Bacon\", \"preco\": 89 },\n    { \"nome\": \"√Ä Moda\", \"preco\": 89 }\n  ],\n  \"pizzas_premium\": [\n    { \"nome\": \"Contra Fil√© e Gorgonzola\", \"preco\": 116 },\n    { \"nome\": \"Carne Seca com Queijo Coalho\", \"preco\": 115 },\n    { \"nome\": \"Camar√£o\", \"preco\": 120 },\n    { \"nome\": \"Quatro Queijos\", \"preco\": 130 },\n    { \"nome\": \"Tr√™s Queijos\", \"preco\": 130 },\n    { \"nome\": \"Francesa\", \"preco\": 130 }\n  ],\n  \"pizzas_doces\": [\n    { \"nome\": \"Banana com Canela\", \"preco\": 89 },\n    { \"nome\": \"√ìreo\", \"preco\": 120 },\n    { \"nome\": \"Banana com Ganache\", \"preco\": 99 },\n    { \"nome\": \"Abacaxi Nevado\", \"preco\": 120 },\n    { \"nome\": \"Abacaxi com Canela\", \"preco\": 120 },\n    { \"nome\": \"Banana Nevada\", \"preco\": 120 },\n    { \"nome\": \"Chocolate Branco\", \"preco\": 120 },\n    { \"nome\": \"Confete\", \"preco\": 120 }\n  ],\n  \"drinks\": [\n    { \"nome\": \"Caipirinha\", \"preco\": 19.90 },\n    { \"nome\": \"Caipiroka\", \"preco\": 29.90 },\n    { \"nome\": \"Gin T√¥nica\", \"preco\": 29.90 },\n    { \"nome\": \"Gin Tropical\", \"preco\": 31.90 },\n    { \"nome\": \"Gin Frutas Vermelhas\", \"preco\": 32.90 },\n    { \"nome\": \"Aperol\", \"preco\": 29.90 },\n    { \"nome\": \"Moscow Mule\", \"preco\": 29.90 },\n    { \"nome\": \"Pina Colada\", \"preco\": 25.90 },\n    { \"nome\": \"Sex on the Beach\", \"preco\": 31.90 },\n    { \"nome\": \"Negroni\", \"preco\": 31.90 },\n    { \"nome\": \"Margarita\", \"preco\": 29.90 },\n    { \"nome\": \"Cozumel\", \"preco\": 24.90 },\n    { \"nome\": \"Soda Italiana\", \"preco\": 29.90 },\n    { \"nome\": \"Mojito\", \"preco\": 28.90 },\n    { \"nome\": \"Dry Martini\", \"preco\": 28.90 },\n    { \"nome\": \"Cassandra\", \"preco\": 34.90 }\n  ],\n  \"destilados\": [\n    { \"nome\": \"Tequila Prata\", \"preco\": 25 },\n    { \"nome\": \"Tequila Ouro\", \"preco\": 25 },\n    { \"nome\": \"Red Label\", \"preco\": 29 },\n    { \"nome\": \"Black Label\", \"preco\": 29 },\n    { \"nome\": \"Old Parr\", \"preco\": 28 },\n    { \"nome\": \"Buchanan‚Äôs\", \"preco\": 36 },\n    { \"nome\": \"Jack Daniels\", \"preco\": 25 },\n    { \"nome\": \"Chivas 12 Anos\", \"preco\": 37 },\n    { \"nome\": \"Gin Beafeater\", \"preco\": 25 },\n    { \"nome\": \"Absolut\", \"preco\": 22 },\n    { \"nome\": \"Bacardi\", \"preco\": 30 },\n    { \"nome\": \"Conhaque\", \"preco\": 28 },\n    { \"nome\": \"Aperol\", \"preco\": 22 },\n    { \"nome\": \"Campari\", \"preco\": 36 },\n    { \"nome\": \"Smirnoff\", \"preco\": 17.90 },\n    { \"nome\": \"Vermute Rosso\", \"preco\": 34 }\n  ],\n  \"cervejas\": [\n    { \"nome\": \"Heineken Long Neck\", \"preco\": 14 },\n    { \"nome\": \"Stella Artois Long Neck\", \"preco\": 12 },\n    { \"nome\": \"Corona Long Neck\", \"preco\": 14 }\n  ],\n  \"outras_bebidas\": [\n    { \"nome\": \"Shot Lim√£o\", \"preco\": 5.90 },\n    { \"nome\": \"√Ågua com g√°s\", \"preco\": 8.90 },\n    { \"nome\": \"√Ågua Sam Pellegrino\", \"preco\": 19.90 },\n    { \"nome\": \"√Ågua sem g√°s\", \"preco\": 8.90 },\n    { \"nome\": \"√Ågua sem g√°s Panna\", \"preco\": 19.90 },\n    { \"nome\": \"Red Bull\", \"preco\": 24.90 },\n    { \"nome\": \"Red Bull Tropical\", \"preco\": 28.90 },\n    { \"nome\": \"Rolha de Vinho\", \"preco\": 50 },\n    { \"nome\": \"Caf√© Expresso\", \"preco\": 9.90 },\n    { \"nome\": \"Licor Artesanal\", \"preco\": 32 },\n    { \"nome\": \"Vinho do P√¥r do Sol\", \"preco\": 36 }\n  ],\n  \"sucos\": [\n    { \"nome\": \"Laranja\", \"preco\": 13.90 },\n    { \"nome\": \"Limonada Su√≠√ßa\", \"preco\": 13.90 },\n    { \"nome\": \"Abacaxi\", \"preco\": 13.90 },\n    { \"nome\": \"Abacaxi com hortel√£\", \"preco\": 13.90 },\n    { \"nome\": \"Maracuj√°\", \"preco\": 13 }\n  ],\n  \"refrigerantes\": [\n    { \"nome\": \"Coca-Cola\", \"preco\": 13.90 },\n    { \"nome\": \"Coca-Cola Zero\", \"preco\": 13.90 },\n    { \"nome\": \"Guaran√° Ant√°rtica (normal ou zero)\", \"preco\": 13.90 },\n    { \"nome\": \"Fanta Uva\", \"preco\": 13.90 },\n    { \"nome\": \"Fanta Laranja\", \"preco\": 13.90 },\n    { \"nome\": \"Sprite\", \"preco\": 13.90 },\n    { \"nome\": \"Schweppes Citrus\", \"preco\": 13.90 },\n    { \"nome\": \"Schweppes √Ågua T√¥nica\", \"preco\": 13.90 },\n    { \"nome\": \"T√¥nica Zero\", \"preco\": 13.90 },\n    { \"nome\": \"H2OH Limoneto\", \"preco\": 13.90 }\n  ]\n}\n",
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1360,
        -320
      ],
      "id": "352e140b-032a-4ae9-b56d-3135957eb19d",
      "name": "üì¶ Card√°pio JSON3"
    },
    {
      "parameters": {
        "model": "llama3-70b-8192",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -1140,
        -100
      ],
      "id": "524111d1-c4a8-40d4-bf4f-c36e88212fec",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "CjeXJAcbwgyIWjPY",
          "name": "Groq account 3"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "download",
        "fileId": "={{ $env.CLIENT_HISTORY_FILE_ID }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 1,
      "position": [
        -1980,
        40
      ],
      "id": "f67db9ad-21a3-4c95-b243-30d0fb40b72b",
      "name": "Download client_history.json",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "iDy7h2pJsGtjdVrT",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $json;\nconst phone = input.phone;\nconst order = input.order;\nconst history = input.history;\n\nconst now = new Date();\nconst cutoff = new Date(now.getTime() - 15 * 24 * 60 * 60 * 1000);\n\nlet clientHistory = history[phone] || [];\nclientHistory = clientHistory.filter(h => new Date(h.timestamp) >= cutoff);\n\nclientHistory.push({\n  timestamp: now.toISOString(),\n  order: order\n});\n\nhistory[phone] = clientHistory;\n\nlet message = '';\nif (clientHistory.length > 1) {\n  const lastOrder = clientHistory[clientHistory.length - 2].order.items.join(', ');\n  message = `Bem‚Äëvindo de volta, ${phone}!\\nNas suas \\\"ultimas visitas voc√™ pediu: ${lastOrder}.\\nGostaria de repetir ou conhecer nossa sugest√£o especial de hoje?`;\n} else {\n  message = `Ol√°, ${phone}! Bem‚Äëvindo √† De‚ÄôVitto Pasta & Pizza.\\nPosso apresentar nosso card√°pio e promo√ß√µes do dia?`;\n}\n\nreturn {\n  updatedHistoryJson: JSON.stringify(history),\n  responseMessage: message\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -1740,
        40
      ],
      "id": "935dbb16-8a38-45ba-b9c2-3e334f46bb59",
      "name": "Atualizar hist√≥rico e gerar resposta"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 1,
      "position": [
        -1500,
        -60
      ],
      "id": "42532289-e7d1-41d3-b755-c235fc6eb4ff",
      "name": "Upload atualizado client_history.json"
    },
    {
      "parameters": {
        "chatId": "={{ $json.phone }}",
        "text": "={{ $json.responseMessage }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1500,
        140
      ],
      "id": "aa0f0ba1-6a2d-40d5-a207-a2c98a911d56",
      "name": "Enviar mensagem WhatsApp (via Telegram API)",
      "webhookId": "caf8ff95-9b83-4662-8363-d19888bcfbbb"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "96Z0xVas4yVnpEFm",
          "mode": "list",
          "cachedResultName": "Delivery_validado_melhorado"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -2200,
        40
      ],
      "id": "531475ed-76d0-49b6-a8c1-3bdae2f2ac42",
      "name": "Execute Workflow"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "üì¶ Card√°pio JSON3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory4": {
      "ai_memory": [
        [
          {
            "node": "Node Atendimento Delivery",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Node Atendimento Delivery",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Vector Store2": {
      "ai_tool": [
        [
          {
            "node": "Node Atendimento Delivery",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini2": {
      "ai_embedding": [
        [
          {
            "node": "Simple Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Node Atendimento Delivery",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "üì¶ Card√°pio JSON3": {
      "main": [
        [
          {
            "node": "Node Atendimento Delivery",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Node Atendimento Delivery",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Download client_history.json": {
      "main": [
        [
          {
            "node": "Atualizar hist√≥rico e gerar resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar hist√≥rico e gerar resposta": {
      "main": [
        [
          {
            "node": "Upload atualizado client_history.json",
            "type": "main",
            "index": 0
          },
          {
            "node": "Enviar mensagem WhatsApp (via Telegram API)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Download client_history.json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6cc7347c-8f2d-406f-adc8-144c8267fa6f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "254513fe932764e496ae9c9da92d9f0a38f348bc657274f7f94d67839677332c"
  },
  "id": "96Z0xVas4yVnpEFm",
  "tags": []
}
